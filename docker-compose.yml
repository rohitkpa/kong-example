services:
  kong-database:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "app=postgres"
      - "service=kong-database"
  
  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - kong-net
    depends_on:
      kong-database:
        condition: service_healthy
    labels:
      - "app=kong"
      - "service=api-gateway"
  
  python-service:
    build: ./python-service
    ports:
      - "5000:5000"
    networks:
      - kong-net
    labels:
      - "app=python-service"
      - "service=backend"
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus 
    volumes:
      - ./config/prometheus.yml:/etc/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - kong-net
    command:
      - '--config.file=/etc/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    restart: unless-stopped
    labels:
      - "app=prometheus"
      - "service=metrics"
  
  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki-config.yml:/etc/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/local-config.yaml
    networks:
      - kong-net
    restart: unless-stopped
    labels:
      - "app=loki"
      - "service=logs"
  
  # Promtail - Collects logs from Docker containers
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - ./config/promtail-config.yml:/etc/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/config.yml
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - loki
    labels:
      - "app=promtail"
      - "service=log-collector"
  
  # Grafana - Dashboard for metrics
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "4000:3000"
    networks:
      - kong-net
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:4000
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped
    labels:
      - "app=grafana"
      - "service=visualization"

  # Harness - CI/CD
  harness:
    image: harness/harness
    container_name: harness
    ports:
      - "3000:3000"
    networks:
      - kong-net
    labels:
      - "app=harness"
      - "environment=local"
      - "service=cd-platform"
    environment:
      - GITNESS_PRINCIPAL_ADMIN_EMAIL=admin@example.com
      - GITNESS_PRINCIPAL_ADMIN_PASSWORD=admin
      - GITNESS_USER_SIGNUP_ENABLED=true
      - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
    volumes:
      - ./config/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro

volumes:
  postgres-data:
  prometheus-data:
  grafana-data:
  loki-data:

networks:
  kong-net:
    driver: bridge